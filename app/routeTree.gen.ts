/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutTeamsImport } from './routes/_layout/teams'
import { Route as LayoutTeamImport } from './routes/_layout/team'
import { Route as LayoutSeasonsImport } from './routes/_layout/seasons'
import { Route as LayoutSeasonImport } from './routes/_layout/season'
import { Route as LayoutSearchImport } from './routes/_layout/search'
import { Route as LayoutMaratonImport } from './routes/_layout/maraton'
import { Route as LayoutDashboardImport } from './routes/_layout/dashboard'

// Create Virtual Routes

const LayoutUnauthorizedLazyImport = createFileRoute('/_layout/unauthorized')()
const LayoutAboutLazyImport = createFileRoute('/_layout/about')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUnauthorizedLazyRoute = LayoutUnauthorizedLazyImport.update({
  path: '/unauthorized',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/unauthorized.lazy').then((d) => d.Route),
)

const LayoutAboutLazyRoute = LayoutAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout/about.lazy').then((d) => d.Route))

const LayoutTeamsRoute = LayoutTeamsImport.update({
  path: '/teams',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamRoute = LayoutTeamImport.update({
  path: '/team',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSeasonsRoute = LayoutSeasonsImport.update({
  path: '/seasons',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSeasonRoute = LayoutSeasonImport.update({
  path: '/season',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSearchRoute = LayoutSearchImport.update({
  path: '/search',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutMaratonRoute = LayoutMaratonImport.update({
  path: '/maraton',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDashboardRoute = LayoutDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/dashboard': {
      id: '/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/maraton': {
      id: '/_layout/maraton'
      path: '/maraton'
      fullPath: '/maraton'
      preLoaderRoute: typeof LayoutMaratonImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/search': {
      id: '/_layout/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof LayoutSearchImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/season': {
      id: '/_layout/season'
      path: '/season'
      fullPath: '/season'
      preLoaderRoute: typeof LayoutSeasonImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/seasons': {
      id: '/_layout/seasons'
      path: '/seasons'
      fullPath: '/seasons'
      preLoaderRoute: typeof LayoutSeasonsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/team': {
      id: '/_layout/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof LayoutTeamImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/teams': {
      id: '/_layout/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof LayoutTeamsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/unauthorized': {
      id: '/_layout/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof LayoutUnauthorizedLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutDashboardRoute: typeof LayoutDashboardRoute
  LayoutMaratonRoute: typeof LayoutMaratonRoute
  LayoutSearchRoute: typeof LayoutSearchRoute
  LayoutSeasonRoute: typeof LayoutSeasonRoute
  LayoutSeasonsRoute: typeof LayoutSeasonsRoute
  LayoutTeamRoute: typeof LayoutTeamRoute
  LayoutTeamsRoute: typeof LayoutTeamsRoute
  LayoutAboutLazyRoute: typeof LayoutAboutLazyRoute
  LayoutUnauthorizedLazyRoute: typeof LayoutUnauthorizedLazyRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDashboardRoute: LayoutDashboardRoute,
  LayoutMaratonRoute: LayoutMaratonRoute,
  LayoutSearchRoute: LayoutSearchRoute,
  LayoutSeasonRoute: LayoutSeasonRoute,
  LayoutSeasonsRoute: LayoutSeasonsRoute,
  LayoutTeamRoute: LayoutTeamRoute,
  LayoutTeamsRoute: LayoutTeamsRoute,
  LayoutAboutLazyRoute: LayoutAboutLazyRoute,
  LayoutUnauthorizedLazyRoute: LayoutUnauthorizedLazyRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/dashboard': typeof LayoutDashboardRoute
  '/maraton': typeof LayoutMaratonRoute
  '/search': typeof LayoutSearchRoute
  '/season': typeof LayoutSeasonRoute
  '/seasons': typeof LayoutSeasonsRoute
  '/team': typeof LayoutTeamRoute
  '/teams': typeof LayoutTeamsRoute
  '/about': typeof LayoutAboutLazyRoute
  '/unauthorized': typeof LayoutUnauthorizedLazyRoute
  '/': typeof LayoutIndexRoute
}

export interface FileRoutesByTo {
  '/dashboard': typeof LayoutDashboardRoute
  '/maraton': typeof LayoutMaratonRoute
  '/search': typeof LayoutSearchRoute
  '/season': typeof LayoutSeasonRoute
  '/seasons': typeof LayoutSeasonsRoute
  '/team': typeof LayoutTeamRoute
  '/teams': typeof LayoutTeamsRoute
  '/about': typeof LayoutAboutLazyRoute
  '/unauthorized': typeof LayoutUnauthorizedLazyRoute
  '/': typeof LayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/dashboard': typeof LayoutDashboardRoute
  '/_layout/maraton': typeof LayoutMaratonRoute
  '/_layout/search': typeof LayoutSearchRoute
  '/_layout/season': typeof LayoutSeasonRoute
  '/_layout/seasons': typeof LayoutSeasonsRoute
  '/_layout/team': typeof LayoutTeamRoute
  '/_layout/teams': typeof LayoutTeamsRoute
  '/_layout/about': typeof LayoutAboutLazyRoute
  '/_layout/unauthorized': typeof LayoutUnauthorizedLazyRoute
  '/_layout/': typeof LayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/maraton'
    | '/search'
    | '/season'
    | '/seasons'
    | '/team'
    | '/teams'
    | '/about'
    | '/unauthorized'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/maraton'
    | '/search'
    | '/season'
    | '/seasons'
    | '/team'
    | '/teams'
    | '/about'
    | '/unauthorized'
    | '/'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/dashboard'
    | '/_layout/maraton'
    | '/_layout/search'
    | '/_layout/season'
    | '/_layout/seasons'
    | '/_layout/team'
    | '/_layout/teams'
    | '/_layout/about'
    | '/_layout/unauthorized'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/dashboard",
        "/_layout/maraton",
        "/_layout/search",
        "/_layout/season",
        "/_layout/seasons",
        "/_layout/team",
        "/_layout/teams",
        "/_layout/about",
        "/_layout/unauthorized",
        "/_layout/"
      ]
    },
    "/_layout/dashboard": {
      "filePath": "_layout/dashboard.tsx",
      "parent": "/_layout"
    },
    "/_layout/maraton": {
      "filePath": "_layout/maraton.tsx",
      "parent": "/_layout"
    },
    "/_layout/search": {
      "filePath": "_layout/search.tsx",
      "parent": "/_layout"
    },
    "/_layout/season": {
      "filePath": "_layout/season.tsx",
      "parent": "/_layout"
    },
    "/_layout/seasons": {
      "filePath": "_layout/seasons.tsx",
      "parent": "/_layout"
    },
    "/_layout/team": {
      "filePath": "_layout/team.tsx",
      "parent": "/_layout"
    },
    "/_layout/teams": {
      "filePath": "_layout/teams.tsx",
      "parent": "/_layout"
    },
    "/_layout/about": {
      "filePath": "_layout/about.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/unauthorized": {
      "filePath": "_layout/unauthorized.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
